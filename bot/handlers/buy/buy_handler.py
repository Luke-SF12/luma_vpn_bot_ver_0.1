from aiogram import Router, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.keyboards.inline import inline_menu
from services.yookassa import create_payment
from database.db import db
from logger import sync_logger, async_logger

router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤—ã–±–æ—Ä–æ–º —Ç–∞—Ä–∏—Ñ–∞
def subscription_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="1 –º–µ—Å—è—Ü ‚Äì 129‚ÇΩ", callback_data="buy_1m")],
            [InlineKeyboardButton(text="3 –º–µ—Å—è—Ü–∞ ‚Äì 369‚ÇΩ (5%)", callback_data="buy_3m")],
            [InlineKeyboardButton(text="6 –º–µ—Å—è—Ü–µ–≤ ‚Äì 699‚ÇΩ (10%)", callback_data="buy_6m")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")],
        ]
    )

@router.callback_query(lambda c: c.data == "buy")
async def show_subscriptions(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    sync_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—á–∞–ª –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–∫—É–ø–∫–∏.")
    async with db.pool.acquire() as conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫
        active_subs = await conn.fetchval(
            "SELECT COUNT(*) FROM subscriptions WHERE user_id = $1 AND status = 'active'",
            user_id
        )

        if active_subs == 0:
            # –î–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–∏
            available_configs = await conn.fetchval(
                "SELECT COUNT(*) FROM configs WHERE is_available = TRUE"
            )
            if not available_configs:
                sync_logger.warning(f"–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–ª—é—á–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")
                await callback.answer("‚ùå –ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –∫–ª—é—á–µ–π!", show_alert=True)
                return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞—Ä–∏—Ñ—ã, –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
    await callback.message.edit_text("<b>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π —Ç–∞—Ä–∏—Ñ –Ω–∏–∂–µ:</b>", reply_markup=subscription_keyboard())

@router.callback_query(lambda c: c.data.startswith("buy_"))
async def buy_handler(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username or "unknown"
    plan = callback.data.split("_")[1]

    prices = {"1m": 129, "3m": 369, "6m": 699}
    amount = prices.get(plan, 129)

    sync_logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª —Ç–∞—Ä–∏—Ñ: {plan} ({amount}‚ÇΩ).")

    async with db.pool.acquire() as connection:
        user = await connection.fetchrow("SELECT * FROM users WHERE tg_id = $1", user_id)
        if not user:
            sync_logger.info(f"–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")
            await connection.execute("INSERT INTO users (tg_id, username) VALUES ($1, $2)", user_id, username)

        payment_id, payment_link = await create_payment(amount, user_id)
        sync_logger.info(f"–ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω: ID={payment_id}, –°—Å—ã–ª–∫–∞={payment_link}.")
        await connection.execute(
            "INSERT INTO payments (user_id, payment_id, amount, status, payment_link) VALUES ($1, $2, $3, $4, $5)",
            user_id, payment_id, amount, "pending", payment_link
        )

    payment_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å", url=payment_link)],
            [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"check_payment_{payment_id}")],
            [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="buy")]
        ]
    )

    await callback.message.edit_text(
        f"üí≥ <b>–û–ø–ª–∞—Ç–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {amount}‚ÇΩ</b>\n\n"
        f"1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>¬´‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å¬ª</b> –Ω–∏–∂–µ –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –æ–ø–ª–∞—Ç—É.\n"
        f"2. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –±–æ—Ç –∏ –Ω–∞–∂–º–∏—Ç–µ <b>¬´üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É¬ª</b>.\n\n",
        reply_markup=payment_keyboard
    )
    await callback.answer()